##############################################################################################
#NOTE:Manually do these steps First
#curl -# -LO https://raw.githubusercontent.com/quickbooks2018/bash-scipts/master/aws-self-signed-acm.sh

#chmod +x aws-self-signed-acm.sh
###############################################################################################

#After done run the mentioned below script after adjustments


#!/bin/bash
#OS: Ubuntu-16-18-LTS

apt update -y
apt install -y curl

curl -fsSL https://get.docker.com -o get-docker.sh
sh get-docker.sh

 systemctl start docker
 systemctl enable docker

docker network ls

docker network create --driver=bridge cloudelligent

docker run --name jenkins --network=cloudelligent -d --user=root -v ~/jenkins:/var/jenkins_home -p 8080:8080 --restart unless-stopped jenkins/jenkins:2.176.1


#1 
mkdir -p ~/ssl/certs

#2 
mkdir -p ~/nginx/conf.d

#3 

##############################################################################################
#NOTE:Manually do these steps First
#curl -# -LO https://raw.githubusercontent.com/quickbooks2018/bash-scipts/master/aws-self-signed-acm.sh
#chmod +x aws-self-signed-acm.sh
###############################################################################################

cp ~/tls/cloudelligent.com.crt /usr/share/ca-certificates
#dpkg-reconfigure ca-certificates
update-ca-certificates
cp ~/tls/cloudelligent.com.crt ~/ssl/certs
cp ~/tls/cloudelligent.com.key ~/ssl/certs


#4
cd ~/nginx/conf.d

#5
apt update -y  2> /dev/null 
apt install -y vim 2> /dev/null
yum update -y  2> /dev/null 
yum install -y vim 2> /dev/null

#6
echo '
server {
  listen 80;
  server_name localhost;
  return 301 https://$host$request_uri;
}
server {
  server_name localhost;
  listen 443 ssl;
  ssl_certificate /etc/ssl/certs/cloudelligent.com.crt;
  ssl_certificate_key /etc/ssl/certs/cloudelligent.com.key;
  
  
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_ciphers    TLS-CHACHA20-POLY1305-SHA256:TLS-AES-256-GCM-SHA384:TLS-AES-128-GCM-SHA256:HIGH:!aNULL:!MD5; 
 
  
  
location / {
    proxy_set_header        Host $host:$server_port;
    proxy_set_header        X-Real-IP $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header        X-Forwarded-Proto $scheme;
    proxy_redirect http:// https://;
    proxy_pass              http://jenkins:8080;
    # Required for new HTTP-based CLI
    proxy_http_version 1.1;
    proxy_request_buffering off;
  
       }
}' >  ~/nginx/conf.d/server.conf

#7
docker run --name nginx --network=cloudelligent --restart unless-stopped -v ~/ssl/certs:/etc/ssl/certs -v ~/nginx/conf.d:/etc/nginx/conf.d -p 443:443 -p 80:80 -d nginx




#END
